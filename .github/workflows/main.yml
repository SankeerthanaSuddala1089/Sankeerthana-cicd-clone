name: Continuous Integration for Mobile

on:
  push:
    branches:
      - '**'

  pull_request:
    branches:
      - '**'

jobs:
  install-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Install Jest
        run: npm install --save-dev jest

    - name: Linting
      run: npm run lint

    - name: Run Unit tests
      run: npm test

  # build-android:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set Up JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu'
  #         java-version: '17'
  #         cache: 'gradle'
  #     - name: Use Node.js 14
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 21.6.1
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm install
  #     - name: Make Gradlew Executable
  #       run: cd android && chmod +x ./gradlew
  #     - name: Build Android

  #       run: |
  #         cd android && gradle init && gradle wrapper

  #     - name: Cache Gradle Dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.gradle/caches
  #         key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-caches-

      # - name: Build Android
      #   run: bash -l -c 'cd android && ./gradlew assembleRelease'
    build-ios:
    needs: install-and-test
    uses: ./.github/workflows/ios-build.yml
